<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:GoogleCloudExtension.Controls"
    xmlns:utils="clr-namespace:GoogleCloudExtension.Utils;assembly=GoogleCloudExtension.Utils"
    xmlns:local="clr-namespace:GoogleCloudExtension.StackdriverLogsViewer">

    <!-- Region colors -->
     <!-- Endregion -->
     
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>

    <Style 
        x:Key="MenuScrollButton" 
        BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                        <Rectangle x:Name="R1" DockPanel.Dock="Right" Fill="Transparent" Width="1"/>
                        <Rectangle x:Name="B1" DockPanel.Dock="Bottom" Fill="Transparent" Height="1"/>
                        <Rectangle x:Name="L1" DockPanel.Dock="Left" Fill="Transparent" Width="1"/>
                        <Rectangle x:Name="T1" DockPanel.Dock="Top" Fill="Transparent" Height="1"/>
                        <ContentPresenter x:Name="ContentContainer" HorizontalAlignment="Center" Margin="2,2,2,2" VerticalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            <Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                            <Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer for a MenuItem -->
    <Style x:Key="MenuScrollViewer"
         TargetType="{x:Type ScrollViewer}"
         BasedOn="{x:Null}">
        <Setter Property="MaxHeight" Value="600" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton 
                            Style="{StaticResource MenuScrollButton}"
                            Grid.Row="0"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding 
                                    FallbackValue="Visibility.Collapsed" 
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource UpArrow}" />
                        </RepeatButton>
                        <RepeatButton 
                            Style="{StaticResource MenuScrollButton}" 
                            Grid.Row="2" 
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding 
                                    FallbackValue="Visibility.Collapsed" 
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource DownArrow}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader  -->
    <ControlTemplate 
        x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
        TargetType="local:SearchMenuItem">
        <Border Name="Border" 
                BorderThickness="1" 
                BorderBrush="LightGray"
                Background="White">
            <Grid>
                <Border>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock 
                            HorizontalAlignment="Center"  
                            VerticalAlignment="Stretch"
                            Padding = "8,5,8,5"      
                            Text="{TemplateBinding Header}"
                            TextWrapping="NoWrap"
                            TextTrimming="CharacterEllipsis" >
                            <TextBlock.ToolTip>
                                <ToolTip Content="{TemplateBinding Header}" />
                            </TextBlock.ToolTip>
                        </TextBlock>

                        <Border 
                            Grid.Column="1" 
                            HorizontalAlignment="Right">
                            <!-- The toggle button looks identical to the one used on a combo box
                                        because I based the definition below on the relevant portion of the
                                        combo box's default control template. -->
                            <ToggleButton IsChecked="False" IsHitTestVisible="False" 
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Background="{TemplateBinding Panel.Background}"                                              
                                          Margin="0, 0, 8, 0"
                                          >

                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />


                                        <!-- The toggle control just needs visually appear. It doesn't
                    need to receive focus or be a tab stop.
                                            -->
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Path Data="M 0 0 L 3 3 L 6 0"  Stroke="#636363" Name="Arrow"
                                                          Margin="3,1,0,0" 
                                                          HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </Border>
                    </Grid>
                </Border>

                <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Fade">
                    <Border
                              Name="SubmenuBorder"
                              SnapsToDevicePixels="True"
                              Background="{StaticResource WindowBackgroundBrush}"
                              BorderBrush="{StaticResource SolidBorderBrush}"
                              BorderThickness="1" >
                        <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                            <StackPanel  
                           
                                IsItemsHost="True" 
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--<Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}"/>-->
                <!--<Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>-->
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HightlightBorder}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <!--<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>-->
                <!--<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem  -->
    <ControlTemplate  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="local:SearchMenuItem">
        <Border 
            Name="Border"
            Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Menu}}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                <Border 
        Name="Check"  
        Width="13" Height="13" 
        Visibility="Collapsed"
        Margin="6,0,6,0" 
        Background="{StaticResource NormalBrush}"
        BorderThickness="1"
        BorderBrush="{StaticResource NormalBorderBrush}">
                    <Path 
          Name="CheckMark"
          Width="7" Height="7" 
          Visibility="Hidden" 
          SnapsToDevicePixels="False" 
          Stroke="{StaticResource GlyphBrush}"
          StrokeThickness="2"
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <TextBlock 
                    Name="HeaderHost"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    Padding="0,5,0,5"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"
                    Text="{TemplateBinding Header}"
                    />
                <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,0,2"
        DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
              Value="{StaticResource SelectedBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- SubmenuHeaderTemplateKey -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
          TargetType="local:SearchMenuItem">
        <Border Name="Border" 
                Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Menu}}}">
            <Grid 
                >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon"/>
                <TextBlock 
                    Name="HeaderHost"
                    Grid.Column="1"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"
                    Text="{TemplateBinding Header}"
                    />
                <TextBlock x:Name="InputGestureText"
                    Grid.Column="2"
                    Text="{TemplateBinding InputGestureText}"
                    Margin="5,2,2,2"
                    DockPanel.Dock="Right"/>
                <Path 
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z" 
                    Fill="{StaticResource GlyphBrush}" />

                <Popup 
                    Name="Popup"
                    Placement="Right"
                    HorizontalOffset="2" 
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="Fade">
                    <Border 
                                      Name="SubmenuBorder"
                                      SnapsToDevicePixels="True"
                                      Background="{StaticResource WindowBackgroundBrush}"
                                      BorderBrush="{StaticResource SolidBorderBrush}"
                                      BorderThickness="1" >
                        <StackPanel>
                            <local:SearchMenuItem Header="All" />
                            <Separator />
                            <StackPanel Margin="8,5,8,5">
                                <TextBlock Text="Search in prefix:" Margin="0,0,0,3" />
                                <TextBox Name="PART_searchTextBox" Padding="8,5,8,5"  />
                            </StackPanel>

                            <control:ProgressIndicator 
                                 Margin="3"
                                Visibility="{Binding IsSubmenuPopulated,Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType={x:Type local:SearchMenuItem }}, Converter={utils:VisibilityConverter IsNegated=True}}" />

                            <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                <StackPanel  
                                        IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background"
              Value="{StaticResource SelectedBackgroundBrush}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style  TargetType="local:SearchMenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsSubmenuPopulated" Value="{Binding IsSubmenuPopulated}" />
        <Setter Property="Command" Value="{Binding MenuCommand}" />
        <Setter Property="OnSubmenuOpenCommand" Value="{Binding OnSubmenuOpenCommand}" />
        <Setter Property="Visibility" 
                Value="{Binding IsFakeItem, Converter={utils:VisibilityConverter IsNegated=True}}" />
        <Setter Property="Header" Value="{Binding Header}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
                    Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>